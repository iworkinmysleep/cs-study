Linear Search
-Looking at every single element in order to see if it's what you want.
-Javascript method examples of this:
  indexOf()
  includes()
-O(n)

Binary Search
-Array has to be sorted
-Must faster than Linear
-O(logn)
-Divide and conquer
-pseudocode
1. Accepts sorted array and a value
2. Create a left pointer at the start of the array, and right pointer at the end.
3. While the left pointer comes before the right pointer:
    1. Create a pointer in the middle
    2. If you find the value you want, return the index
    3. If the value is too small, move the left pointer up
    3. If the value is too large, move the right pointer down
4. If you never find the value, return -1

function binarySearch(arr, elem) {
    var start = 0;
    var end = arr.length - 1;
    var middle = Math.floor((start + end) / 2);
    while(arr[middle] !== elem && start <= end) {
        if(elem < arr[middle]){
            end = middle - 1;
        } else {
            start = middle + 1;
        }
        middle = Math.floor((start + end) / 2);
    }
    if(arr[middle] === elem){
        return middle;
    }
    return -1;
}

// Refactored Version
function binarySearch(arr, elem) {
    var start = 0;
    var end = arr.length - 1;
    var middle = Math.floor((start + end) / 2);
    while(arr[middle] !== elem && start <= end) {
        if(elem < arr[middle]) end = middle - 1;
        else start = middle + 1;
        middle = Math.floor((start + end) / 2);
    }
    return arr[middle] === elem ? middle : -1;
}




